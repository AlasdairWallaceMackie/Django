Last login: Tue Apr  6 15:29:41 on console

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
Alasdair-Mac-Mini:~ Alasdair$ cd /Users/Alasdair/Documents/Coding/Python/python_stack/my_environments
Alasdair-Mac-Mini:my_environments Alasdair$ source djangoPy3Env/bin/activate
(djangoPy3Env) Alasdair-Mac-Mini:my_environments Alasdair$ cd /Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ ls
Mackie_Alasdair_Django_Users(shell).rtf	orm_demo
dojo_ninjas_proj			single_model_orm
forum_lesson
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ django-admin startproject week_9
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ cd week_9/
(djangoPy3Env) Alasdair-Mac-Mini:week_9 Alasdair$ ls
manage.py	week_9
(djangoPy3Env) Alasdair-Mac-Mini:week_9 Alasdair$  
  [Restored Apr 7, 2021 at 4:38:29 PM]
## cd /Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm/week_9 ##
Last login: Wed Apr  7 16:22:05 on console
Restored session: Tue Apr  6 20:08:11 EDT 2021

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
Alasdair-Mac-Mini:~ Alasdair$ cd /Users/Alasdair/Documents/Coding/Python/python_stack/my_environments
Alasdair-Mac-Mini:my_environments Alasdair$ source djangoPy3Env/bin/activate
(djangoPy3Env) Alasdair-Mac-Mini:my_environments Alasdair$ ls
djangoPy3Env	py3Env
(djangoPy3Env) Alasdair-Mac-Mini:my_environments Alasdair$ cd /Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ ls
Mackie_Alasdair_Django_Users(shell).rtf	orm_demo
dojo_ninjas_proj			single_model_orm
forum_lesson
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ django-admin startproject book_authors_proj
(djangoPy3Env) Alasdair-Mac-Mini:django_orm Alasdair$ cd book_authors_proj/
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ ls
book_authors_proj	manage.py
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py startapp books_authors_app
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py makemigrations
Traceback (most recent call last):
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm/book_authors_proj/manage.py", line 21, in <module>
    main()
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm/book_authors_proj/manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/core/management/__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/core/management/__init__.py", line 357, in execute
    django.setup()
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 786, in exec_module
  File "<frozen importlib._bootstrap_external>", line 923, in get_code
  File "<frozen importlib._bootstrap_external>", line 853, in source_to_code
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/Alasdair/Documents/Coding/Python/python_stack/django/django_orm/book_authors_proj/books_authors_app/models.py", line 12
    def __repr__(self)
                      ^
SyntaxError: invalid syntax
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0001_initial.py
    - Create model Book
    - Create model Author
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying books_authors_app.0001_initial... OK
  Applying sessions.0001_initial... OK
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py shell
Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: Book.objects.create(title="C Sharp", desc="Book about C#")
Out[2]: <Book: Book object (1)>

In [3]: from books_authors_app.models import *

In [4]: Book.objects.get(id=1)
Out[4]: <Book: Book object (1)>

In [5]: exit()
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py shell
Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: Book.objects.get(id=1)
Out[2]: <Book id (1): C Sharp by books_authors_app.Author.None>

In [3]: exit()
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py shell
Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: Book.objects.get(id=1)
Out[2]: <Book id (1): C Sharp by <QuerySet []>>

In [3]: Book.objects.create(title="Java", desc="Learn about Java")
Out[3]: <Book id (2): Java by <QuerySet []>>

In [4]: Book.objects.create(title="Python", desc="Learn about Ruby")
Out[4]: <Book id (3): Python by <QuerySet []>>

In [5]: Book.objects.create(title="PHP", desc="Learn about PHP")
Out[5]: <Book id (4): PHP by <QuerySet []>>

In [6]: Book.objects.create(title="Ruby", desc="Book about Ruby")
Out[6]: <Book id (5): Ruby by <QuerySet []>>

In [7]: book_to_edit = Book.objects.get(title="Python")

In [8]: book_to_edit.desc = "Learn about Python"

In [9]: book_to_edit.save()

In [10]: Book.objects.get(title="Python").desc
Out[10]: 'Learn about Python'

In [11]: Author.objects.create(first_name="Jane", last_name="Austen")
Out[11]: <Author: Author object (1)>

In [12]: Author.objects.create(first_name="Emily", last_nane="Dickinson")
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-12-54b52a14d3e1> in <module>
----> 1 Author.objects.create(first_name="Emily", last_nane="Dickinson")

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     80         def create_method(name, method):
     81             def manager_method(self, *args, **kwargs):
---> 82                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     83             manager_method.__name__ = method.__name__
     84             manager_method.__doc__ = method.__doc__

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/query.py in create(self, **kwargs)
    418         and returning the created object.
    419         """
--> 420         obj = self.model(**kwargs)
    421         self._for_write = True
    422         obj.save(force_insert=True, using=self.db)

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/base.py in __init__(self, *args, **kwargs)
    499                     pass
    500             for kwarg in kwargs:
--> 501                 raise TypeError("%s() got an unexpected keyword argument '%s'" % (cls.__name__, kwarg))
    502         super().__init__()
    503         post_init.send(sender=cls, instance=self)

TypeError: Author() got an unexpected keyword argument 'last_nane'

In [13]: Author.objects.create(first_name="Emily", last_name="Dickinson")
Out[13]: <Author: Author object (2)>

In [14]: Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")
Out[14]: <Author: Author object (3)>

In [15]: Author.objects.create(first_name="William", last_name="Shakespeare")
Out[15]: <Author: Author object (4)>

In [16]: Author.objects.create(first_name="Lau", last_name="Tzu")
Out[16]: <Author: Author object (5)>

In [17]: exit()
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py makemigrations
You are trying to add a non-nullable field 'notes' to author without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 2
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0002_author_notes.py
    - Add field notes to author
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying books_authors_app.0002_author_notes... OK
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py shell
Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: Book.objects.get(id=1)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-c8e31803c30d> in <module>
----> 1 Book.objects.get(id=1)

NameError: name 'Book' is not defined

In [2]: from book_authors_app.models import *
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-2-8b8f85d9fb01> in <module>
----> 1 from book_authors_app.models import *

ModuleNotFoundError: No module named 'book_authors_app'

In [3]: from books_authors_app.models import *

In [4]: Book.objects.get(id=1)
Out[4]: <Book id (1): C Sharp by <QuerySet []>>

In [5]: book_to_edit = Book.objects.get(id=1)

In [6]: book_to_edit.title = "C#"

In [7]: book_to_edit
Out[7]: <Book id (1): C# by <QuerySet []>>

In [8]: book_to_edit.save()

In [9]: author_to_edit = Author.objects.get(first_name="William")

In [10]: author_to_edit.first_name = "Bill"

In [11]: author_to_edit
Out[11]: <Author: Author object (4)>

In [12]: exit()
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py makemigrations
No changes detected
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  No migrations to apply.
(djangoPy3Env) Alasdair-Mac-Mini:book_authors_proj Alasdair$ python3 manage.py shell
Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: Author.objects.get(id=4)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-23d0887e24f3> in <module>
----> 1 Author.objects.get(id=4)

NameError: name 'Author' is not defined

In [2]: from books_authors_app.models import *

In [3]: Author.objects.get(id=4)
Out[3]: <Author id (4): William Shakespeare>

In [4]: author_to_edit = Author.objects.get(first_name="William")

In [5]: author_to_edit.first_name = "Bill"

In [6]: author_to_edit.save()

In [7]: book_to_edit = Book.objects.get(id=1)

In [8]: book_to_edit.authors.add( Author.objects.get(id=1) )

In [9]: book_to_edit.save()

In [10]: Book_C = Book.objects.get(id=1)

In [11]: java = Book.objects.get(id=2)

In [12]: python = Book.objects.get(id=3)

In [13]: php = Book.objects.get(id=4)

In [14]: ruby = Book.objects.get(id=5)

In [15]: c = Book.objects.get(id=1)

In [16]: python.authors.add( Author.objects.get(id=1) )

In [17]: python.authors
Out[17]: <django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager at 0x7fca094eceb0>

In [18]: python
Out[18]: <Book id (3): Python by <QuerySet [<Author id (1): Jane Austen>]>>

In [19]: c.authors.add(Author.objects.get(id=2))

In [20]: java.authors.add(Author.objects.get(id=2))

In [21]: python..authors.add(Author.objects.get(id=2))
  File "<ipython-input-21-a307b2cd5e7c>", line 1
    python..authors.add(Author.objects.get(id=2))
           ^
SyntaxError: invalid syntax


In [22]: python.authors.add(Author.objects.get(id=2))

In [23]: author_edit = Author.objects.get(id=3)

In [24]: author_edit.books.add( Book.filter(id=1,id=2,id=3,id=4) )
  File "<ipython-input-24-4d3b311e2401>", line 1
    author_edit.books.add( Book.filter(id=1,id=2,id=3,id=4) )
                                            ^
SyntaxError: keyword argument repeated: id


In [25]: author_edit.books.add( Book.filter(id<5) )
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-25-62a7777dce8d> in <module>
----> 1 author_edit.books.add( Book.filter(id<5) )

AttributeError: type object 'Book' has no attribute 'filter'

In [26]: author_edit.books.add( Book.objects.filter(id<5) )
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-26-4955f2f81d53> in <module>
----> 1 author_edit.books.add( Book.objects.filter(id<5) )

TypeError: '<' not supported between instances of 'builtin_function_or_method' and 'int'

In [27]: author_edit.books.add( Book.objects.filter(id__lt=5) )
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-27-df10bf780c02> in <module>
----> 1 author_edit.books.add( Book.objects.filter(id__lt=5) )

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/fields/related_descriptors.py in add(self, through_defaults, *objs)
    961             db = router.db_for_write(self.through, instance=self.instance)
    962             with transaction.atomic(using=db, savepoint=False):
--> 963                 self._add_items(
    964                     self.source_field_name, self.target_field_name, *objs,
    965                     through_defaults=through_defaults,

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/fields/related_descriptors.py in _add_items(self, source_field_name, target_field_name, through_defaults, *objs)
   1086 
   1087                 db = router.db_for_write(self.through, instance=self.instance)
-> 1088                 vals = (self.through._default_manager.using(db)
   1089                         .values_list(target_field_name, flat=True)
   1090                         .filter(**{

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/query.py in filter(self, *args, **kwargs)
    890         set.
    891         """
--> 892         return self._filter_or_exclude(False, *args, **kwargs)
    893 
    894     def exclude(self, *args, **kwargs):

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/query.py in _filter_or_exclude(self, negate, *args, **kwargs)
    908             clone.query.add_q(~Q(*args, **kwargs))
    909         else:
--> 910             clone.query.add_q(Q(*args, **kwargs))
    911         return clone
    912 

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/sql/query.py in add_q(self, q_object)
   1288         # So, demotion is OK.
   1289         existing_inner = {a for a in self.alias_map if self.alias_map[a].join_type == INNER}
-> 1290         clause, _ = self._add_q(q_object, self.used_aliases)
   1291         if clause:
   1292             self.where.add(clause, AND)

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/sql/query.py in _add_q(self, q_object, used_aliases, branch_negated, current_negated, allow_joins, split_subq, simple_col)
   1313                 joinpromoter.add_votes(needed_inner)
   1314             else:
-> 1315                 child_clause, needed_inner = self.build_filter(
   1316                     child, can_reuse=used_aliases, branch_negated=branch_negated,
   1317                     current_negated=current_negated, allow_joins=allow_joins,

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/sql/query.py in build_filter(self, filter_expr, branch_negated, current_negated, can_reuse, allow_joins, split_subq, reuse_with_filtered_relation, simple_col)
   1249             col = _get_col(targets[0], join_info.final_field, alias, simple_col)
   1250 
-> 1251         condition = self.build_lookup(lookups, col, value)
   1252         lookup_type = condition.lookup_name
   1253         clause.add(condition, AND)

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/sql/query.py in build_lookup(self, lookups, lhs, rhs)
   1114                 return
   1115 
-> 1116         lookup = lookup_class(lhs, rhs)
   1117         # Interpret '__exact=None' as the sql 'is NULL'; otherwise, reject all
   1118         # uses of None as a query value unless the lookup supports it.

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/lookups.py in __init__(self, lhs, rhs)
     18     def __init__(self, lhs, rhs):
     19         self.lhs, self.rhs = lhs, rhs
---> 20         self.rhs = self.get_prep_lookup()
     21         if hasattr(self.lhs, 'get_bilateral_transforms'):
     22             bilateral_transforms = self.lhs.get_bilateral_transforms()

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/fields/related_lookups.py in get_prep_lookup(self)
     57                 # only one as we don't get to the direct value branch otherwise.
     58                 target_field = self.lhs.output_field.get_path_info()[-1].target_fields[-1]
---> 59                 self.rhs = [target_field.get_prep_value(v) for v in self.rhs]
     60         return super().get_prep_lookup()
     61 

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/fields/related_lookups.py in <listcomp>(.0)
     57                 # only one as we don't get to the direct value branch otherwise.
     58                 target_field = self.lhs.output_field.get_path_info()[-1].target_fields[-1]
---> 59                 self.rhs = [target_field.get_prep_value(v) for v in self.rhs]
     60         return super().get_prep_lookup()
     61 

~/Documents/Coding/Python/python_stack/my_environments/djangoPy3Env/lib/python3.9/site-packages/django/db/models/fields/__init__.py in get_prep_value(self, value)
    964         if value is None or isinstance(value, OuterRef):
    965             return value
--> 966         return int(value)
    967 
    968     def contribute_to_class(self, cls, name, **kwargs):

TypeError: int() argument must be a string, a bytes-like object or a number, not 'QuerySet'

In [28]: author_edit.books.add( c, java, python, php )

In [29]: author_edit = Author.objects.get(id=4)

In [30]: author_edit.books.add( c, java, python, php, ruby )

In [31]: python.authors.all()
Out[31]: <QuerySet [<Author id (1): Jane Austen>, <Author id (2): Emily Dickinson>, <Author id (3): Fyodor Dostoevsky>, <Author id (4): Bill Shakespeare>]>

In [32]: c.remove( Author.objects.get(id=1) )
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-32-b31615f30c3d> in <module>
----> 1 c.remove( Author.objects.get(id=1) )

AttributeError: 'Book' object has no attribute 'remove'

In [33]: c.authors.remove( Author.objects.get(id=1) )

In [34]: java.authors.add( Author.objects.get(id=5) )

In [35]: Author.objects.get(id=3).books.all()
Out[35]: <QuerySet [<Book id (1): C# by <QuerySet [<Author id (2): Emily Dickinson>, <Author id (3): Fyodor Dostoevsky>, <Author id (4): Bill Shakespeare>]>>, <Book id (2): Java by <QuerySet [<Author id (2): Emily Dickinson>, <Author id (3): Fyodor Dostoevsky>, <Author id (4): Bill Shakespeare>, <Author id (5): Lau Tzu>]>>, <Book id (3): Python by <QuerySet [<Author id (1): Jane Austen>, <Author id (2): Emily Dickinson>, <Author id (3): Fyodor Dostoevsky>, <Author id (4): Bill Shakespeare>]>>, <Book id (4): PHP by <QuerySet [<Author id (3): Fyodor Dostoevsky>, <Author id (4): Bill Shakespeare>]>>]>

In [36]: ruby.authors.all()
Out[36]: <QuerySet [<Author id (4): Bill Shakespeare>]>

In [37]: Book.objects.all().save()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-37-dc46ea0677ea> in <module>
----> 1 Book.objects.all().save()

AttributeError: 'QuerySet' object has no attribute 'save'

In [38]: c.save()

In [39]: java.save()

In [40]: python.save()

In [41]: php.save()

In [42]: ruby.save()

In [43]: Author.objects.get(id=1).save()

In [44]: Author.objects.get(id=2).save()

In [45]: Author.objects.get(id=3).save()

In [46]: Author.objects.get(id=4).save()

In [47]: Author.objects.get(id=5).save()

In [48]: Book.objects.filter(id<5)
